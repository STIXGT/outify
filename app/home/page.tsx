import { type Metadata } from 'next'
import {
  ClerkProvider,
  SignInButton,
  SignUpButton,
  SignedIn,
  SignedOut,
  UserButton,
} from '@clerk/nextjs'
import { Geist, Geist_Mono } from 'next/font/google'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Clerk Next.js Quickstart',
  description: 'Generated by create next app',
}
export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <ClerkProvider
      appearance={{
        baseTheme: undefined, // o 'dark' para tema oscuro
        variables: {
          colorPrimary: "#6c47ff", // Usa tu color morado
          colorBackground: "#ffffff",
          colorInputBackground: "#ffffff",
          colorInputText: "#374151",
          fontFamily: "var(--font-geist-sans)",
          fontFamilyButtons: "var(--font-geist-sans)",
          fontSize: "16px",
          borderRadius: "0.75rem" // rounded-xl
        },
        elements: {
          // Personaliza los modales/componentes
          card: "shadow-2xl border-0 rounded-2xl",
          headerTitle: "text-2xl font-bold text-gray-900",
          headerSubtitle: "text-gray-600",
          socialButtonsBlockButton: "bg-white border-2 border-gray-200 hover:border-gray-300 text-gray-700 hover:bg-gray-50 rounded-xl transition-all duration-200",
          socialButtonsBlockButtonText: "font-medium",
          formButtonPrimary: "bg-[#6c47ff] hover:bg-[#5a3dd4] text-white font-medium py-3 px-4 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl",
          formFieldInput: "border-2 border-gray-200 rounded-xl px-4 py-3 focus:border-[#6c47ff] focus:ring-2 focus:ring-[#6c47ff]/20 transition-all duration-200",
          formFieldLabel: "text-gray-700 font-medium text-sm",
          dividerLine: "bg-gray-200",
          dividerText: "text-gray-500 text-sm",
          footerActionText: "text-gray-600",
          footerActionLink: "text-[#6c47ff] hover:text-[#5a3dd4] font-medium",
          identityPreviewText: "text-gray-600",
          identityPreviewEditButton: "text-[#6c47ff] hover:text-[#5a3dd4]",
          
          // Personaliza el UserButton
          userButtonAvatarBox: "w-10 h-10 rounded-full border-2 border-gray-200 hover:border-[#6c47ff] transition-all duration-200",
          userButtonPopoverCard: "shadow-2xl border-0 rounded-2xl",
          userButtonPopoverActionButton: "hover:bg-gray-50 rounded-lg transition-all duration-200",
          userButtonPopoverActionButtonText: "text-gray-700"
        }
      }}
    >
          <header className="flex justify-end items-center p-4 gap-4 h-16 bg-white/80 backdrop-blur-sm border-b border-gray-100">
            <SignedOut>
              <SignInButton mode="modal">
                <button className="text-gray-700 hover:text-[#6c47ff] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 cursor-pointer transition-colors duration-200 rounded-xl hover:bg-gray-50">
                  Sign In
                </button>
              </SignInButton>
              <SignUpButton mode="modal">
                <button className="bg-[#6c47ff] hover:bg-[#5a3dd4] text-white rounded-full font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 cursor-pointer transition-all duration-200 shadow-lg hover:shadow-xl">
                  Sign Up
                </button>
              </SignUpButton>
            </SignedOut>
            <SignedIn>
              <UserButton 
                appearance={{
                  elements: {
                    userButtonAvatarBox: "w-10 h-10 rounded-full border-2 border-gray-200 hover:border-[#6c47ff] transition-all duration-200"
                  }
                }}
              />
            </SignedIn>
          </header>
          {children}
    </ClerkProvider>
  )
}